<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \App\Entity\Product implements \Doctrine\Persistence\Proxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as __load;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
        __clone as private __doClone;
    }

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'EAN' => [parent::class, 'EAN', null],
        "\0".parent::class."\0".'added' => [parent::class, 'added', null],
        "\0".parent::class."\0".'brand' => [parent::class, 'brand', null],
        "\0".parent::class."\0".'category' => [parent::class, 'category', null],
        "\0".parent::class."\0".'description' => [parent::class, 'description', null],
        "\0".parent::class."\0".'discount' => [parent::class, 'discount', null],
        "\0".parent::class."\0".'feature1' => [parent::class, 'feature1', null],
        "\0".parent::class."\0".'feature2' => [parent::class, 'feature2', null],
        "\0".parent::class."\0".'feature3' => [parent::class, 'feature3', null],
        "\0".parent::class."\0".'features' => [parent::class, 'features', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'images' => [parent::class, 'images', null],
        "\0".parent::class."\0".'name' => [parent::class, 'name', null],
        "\0".parent::class."\0".'price' => [parent::class, 'price', null],
        "\0".parent::class."\0".'productVariants' => [parent::class, 'productVariants', null],
        "\0".parent::class."\0".'rating' => [parent::class, 'rating', null],
        "\0".parent::class."\0".'short_description' => [parent::class, 'short_description', null],
        "\0".parent::class."\0".'simpleProduct' => [parent::class, 'simpleProduct', null],
        "\0".parent::class."\0".'slug' => [parent::class, 'slug', null],
        'EAN' => [parent::class, 'EAN', null],
        'added' => [parent::class, 'added', null],
        'brand' => [parent::class, 'brand', null],
        'category' => [parent::class, 'category', null],
        'description' => [parent::class, 'description', null],
        'discount' => [parent::class, 'discount', null],
        'feature1' => [parent::class, 'feature1', null],
        'feature2' => [parent::class, 'feature2', null],
        'feature3' => [parent::class, 'feature3', null],
        'features' => [parent::class, 'features', null],
        'id' => [parent::class, 'id', null],
        'images' => [parent::class, 'images', null],
        'name' => [parent::class, 'name', null],
        'price' => [parent::class, 'price', null],
        'productVariants' => [parent::class, 'productVariants', null],
        'rating' => [parent::class, 'rating', null],
        'short_description' => [parent::class, 'short_description', null],
        'simpleProduct' => [parent::class, 'simpleProduct', null],
        'slug' => [parent::class, 'slug', null],
    ];

    /**
     * @internal
     */
    public bool $__isCloning = false;

    public function __construct(?\Closure $initializer = null)
    {
        self::createLazyGhost($initializer, [
            "\0".parent::class."\0".'id' => true,
            '__isCloning' => true,
        ], $this);
    }

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __clone()
    {
        $this->__isCloning = true;

        try {
            $this->__doClone();
        } finally {
            $this->__isCloning = false;
        }
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"], $properties['__isCloning']);

        return $properties;
    }
}
